{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","title","onAdd","showAdd","Task","task","onDelete","onToggle","cursor","id","day","Tasks","tasks","map","AddTask","useState","setText","setDate","reminder","setReminder","onSubmit","e","preventDefault","alert","type","placeholder","value","onChange","target","maxLength","required","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8dea3070.chunk.js","sourcesContent":["import PropTypes from 'prop-types'\n\n\nconst Button = ({ color, text, onClick }) => {\n\n    return (\n    <button onClick={onClick} style={{ backgroundColor: color }} className='btn'>\n        {text}\n    </button>\n    )\n}\n\nButton.defaultProps = {\n    color: 'steelblue'\n}\n\nButton.propTypes = {\n    text: PropTypes.string,\n    color: PropTypes.string,\n    onClick: PropTypes.func,\n}\n\nexport default Button\n","import PropTypes from 'prop-types'\nimport Button from './Button'\n\n\nconst Header = ({ title, onAdd, showAdd }) => {\n\n    return (\n        <header className='header'>\n            <h1>{title}</h1>\n            <Button color={showAdd ? '#e04836' : 'steelblue'}\n            text={showAdd ? 'Close' : 'Add'} \n            onClick = {onAdd}/>\n        </header>\n    )\n}\n\nHeader.defaultProps = {\n    title: 'Task Tracker',\n}\n\nHeader.propTypes = {\n    title: PropTypes.string.isRequired,\n}\n\nexport default Header\n","import { FaTimes } from 'react-icons/fa'\n\nconst Task = ({task, onDelete, onToggle}) => {\n    return (\n        <div className='task'> \n            <h3>{task.text} \n            <FaTimes style={{ color: 'red', cursor: 'pointer'}} \n            onClick={() => onDelete(task.id)}/></h3>\n            <p>{task.day}</p>\n        </div>\n    )\n}\n\nexport default Task\n","import Task from './Task'\n\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\n    return (\n        <>\n          {tasks.map((task) => \n          (<Task \n            key={task.id} \n            task={task} \n            onDelete={onDelete}\n            onToggle={onToggle}\n            />\n          ))}  \n        </>\n    )\n}\n\nexport default Tasks\n","import { useState } from 'react'\n\nconst AddTask = ({onAdd}) => {\n    const [text, setText] = useState('')\n    const [day, setDate] = useState('')\n    const [reminder, setReminder] = useState(false)\n\n    const onSubmit = (e) => { \n        e.preventDefault()\n\n        if(!text){\n            alert('Please add a task. ^___^')\n            return\n        }\n        onAdd({ text, day, reminder })\n\n        setText('')\n        setDate('')\n        setReminder(false)\n    }\n\n    return (\n        <form className='add-form' onSubmit={onSubmit}>\n            <div className='form-control'>\n                <label>Task</label>\n                <input type='text' placeholder='Add Task' \n                value={text}\n                onChange={(e) => setText(e.target.value)}\n                maxLength='20'/>\n            </div>\n            <div className='form-control'>\n                <label>Date</label>\n                <input type='date' placeholder='Add Date' \n                value={day}\n                onChange={(e) => setDate(e.target.value)} \n                required/>\n            </div>\n            \n\n            <input type='submit' value='Save Task' className='btn btn-block'/>\n        </form>\n    )\n}\n\nexport default AddTask\n","import { useState } from 'react'\nimport Header from './components/Header'\nimport Tasks from './components/Tasks'\nimport AddTask from './components/AddTask'\n\n\nconst App = () => {\n  const [showAddTask, setShowAddTask] = useState(false)\n  const [tasks, setTasks] = useState([\n    {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: '2021-02-20',\n    },\n    {\n        id: 2,\n        text: 'Google meet',\n        day: '2021-02-21',\n    },\n    {\n        id: 3,\n        text: 'Shopping',\n        day: '2021-02-20',\n    }\n])\n\n//Adding tasks\nconst addTask = (task) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n  const newTask = { id, ...task }\n  setTasks([...tasks, newTask])\n}\n\n//This block will delete tasks :)\n  const deleteTask = (id) => {\n    setTasks(tasks.filter((task) => task.id !== id))\n  }\n\n\n   return (\n    <div className='container'>\n      <Header onAdd={() => setShowAddTask(!showAddTask)}\n      showAdd={showAddTask} />\n      {showAddTask && <AddTask onAdd={addTask}/>}\n      {tasks.length > 0 ? \n      (<Tasks tasks={tasks} onDelete={deleteTask}  />) : \n      ('No tasks to show.') }\n    </div>\n    \n  );\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}